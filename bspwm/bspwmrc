#! /bin/zsh
pgrep -x sxhkd > /dev/null || sxhkd &

~/.screenlayout/automonitors.sh

if [ `xrandr --listmonitors | awk '$1 ~ "Monitor" {print $2}'` = '1' ]; then
  m=`xrandr --listmonitors | awk 'NR > 1 {print $NF}'`
  notify-send "monitor $m"
  bspc monitor $m -d 1 2 3 4 5 6 7 8 9 10
else 
  bspc monitor DisplayPort-0 -d 1 2 3 4 5 6
  bspc monitor DisplayPort-1 -d 7 8 9 10
fi

bspc config border_width         2
bspc config window_gap          10

bspc config focused_border_color "#FFDFA1"
bspc config presel_feedback_color "#FFDFA1"


bspc config split_ratio          0.51
bspc config borderless_monocle   false
bspc config gapless_monocle      false


bspc rule -a kittyupdater:kittyupdater desktop='10' follow=on
bspc rule -a Google-chrome desktop='2'
bspc rule -a Mailspring:mailspring desktop='2' follow=on
bspc rule -a kittylf desktop='3' follow=on
bspc rule -a kittyranger desktop='3' follow=on
bspc rule -a Qalculate-gtk:qalculate-gtk state=floating
bspc rule -a kittyncmpcpp state=floating center=on rectangle=1060x700+0+0
bspc rule -a Eclipse:Eclipse desktop='9' follow=on
bspc rule -a DBeaver:DBeaver desktop='8' follow=on


xsetroot -cursor_name left_ptr

## MAGNECIAREAL ##  
lxpolkit &

vnc=$(xrandr | grep " connected" | cut -d\  -f1)

if [[ $vnc =~ "VNC" ]]; then
  echo "sdkfjdkf"
else 
  picom -bf
fi

xss-lock --transfer-sleep-lock -- i3lock-fancy-dualmonitor &

# pgrep -x "glava" > /dev/null || glava -d &
# sleep 1 && ~/.config/i3/scripts/dinamic_wallpaper.sh ~/Videos/wallpapers/LiveWallpaperPC.com-Girl-Pipe.mp4 &
~/.fehbg
~/.config/polybar/launch.sh --magneciareal &
~/.config/magne-scripts/wacom_config.sh DisplayPort-0

# thunar --daemon &
pgrep -f "udiskie -s -f xdg-open" || udiskie -s -f xdg-open
pgrep -f "bluetooth-autoconnect --daemon" || bluetooth-autoconnect --daemon &


# Function to get the size of the XRDP window
get_xrdp_window_size() {
    # Get the screen resolution using xrandr
    screen_size=$(xrandr | grep -oP 'current \K(\d+) x (\d+)')
    echo "$screen_size"
}

# Function to set the screen resolution using xrandr
set_screen_resolution() {
    resolution="$1"
    xrandr --output Virtual-1 --mode "$resolution"
}

# Main loop
while true; do
    window_size=$(get_xrdp_window_size)
    set_screen_resolution "$window_size"
    sleep 1  # Adjust polling interval as needed
done &





kill -9 `pgrep -f "bspc subscribe report node_flag node_focus"`
while read -r line; do

  case "$line" in
    *'locked on')
      bspc config focused_border_color "#FF0000"
      ;;
    *'locked off')
      bspc config focused_border_color "#FFDFA1"
			;;
		*'marked on')
      for mark in `bspc query -N -n .marked`; do
        bspc config -n $mark border_width 5;
      done;
			;;
		*'marked off')
      node=${${line% marked off}##* }
			bspc config -n $node border_width 2
			;;
	esac

  [ ${line%% *} = "node_focus" ] && \
    (bspc config -n ${line##* }.locked focused_border_color "#FF0000" || bspc config focused_border_color "#FFDFA1")

done < <(bspc subscribe report node_flag node_focus)
